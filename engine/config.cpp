#include "config.h"
#include "types.h"
void Config::load()
{
	std::ifstream f("data/config.json");
	Json data = Json::parse(f);
	stepsPerSecond = data["stepsPerSecond"].get<Step>();
	secondsPerMinute = data["secondsPerMinute"].get<uint32_t>();
	minutesPerHour = data["minutesPerHour"].get<uint32_t>();
	hoursPerDay = data["hoursPerDay"].get<uint32_t>();
	daysPerYear = data["daysPerYear"].get<uint16_t>();
	stepsPerMinute = stepsPerSecond * secondsPerMinute;
	stepsPerHour = stepsPerMinute * minutesPerHour;
	stepsPerDay = stepsPerHour * hoursPerDay;
	stepsPerYear = daysPerYear * stepsPerDay;
	//medicalPriority = data["medicalPriority"].get<uint32_t>();
	//medicalProjectDelaySteps = data["medicalProjectDelayMinutes"].get<uint32_t>() * stepsPerMinute;
	addToStockPileDelaySteps = data["addToStockPileDelaySeconds"].get<float>() * stepsPerSecond;
	adjacentAllyCombatScoreBonusModifier = data["adjacentAllyCombatScoreBonusModifier"].get<float>();
	attackCoolDownDurationBaseDextarity = data["attackCoolDownDurationBaseDextarity"].get<uint32_t>();
	attackCoolDownDurationBaseSteps = data["attackCoolDownDurationBaseSeconds"].get<float>() * stepsPerSecond;
	attackSkillCombatModifier = data["attackSkillCombatModifier"].get<float>();
	averageItemQuality = data["averageItemQuality"].get<uint32_t>();
	averageLandHeightBlocks = data["averageLandHeightBlocks"].get<float>();
	averageNumberOfRiversPerCandidate = data["averageNumberOfRiversPerCandidate"].get<float>();
	baseHealDelaySteps = data["baseHealDelaySeconds"].get<float>() * stepsPerSecond;
	baseMoveCost = data["baseMoveCost"].get<MoveCost>();
	bleedEventBaseFrequency = data["bleedEventBaseFrequencySeconds"].get<float>() * stepsPerSecond;
	bleedPassOutDuration = data["bleedPassOutDurationSeconds"].get<float>() * stepsPerSecond;
	bleedToDeathRatio = data["bleedToDeathRatio"].get<float>();
	bleedToUnconciousessRatio = data["bleedToUnconciousessRatio"].get<float>();
	blocksPerMeter = data["blocksPerMeter"].get<float>();
	bludgeonBleedVoumeRateModifier = data["bludgeonBleedVoumeRateModifier"].get<uint32_t>();
	bludgeonPercentPermanantImparmentModifier = data["bludgeonPercentPermanantImparmentModifier"].get<uint32_t>();
	bludgeonPercentTemporaryImparmentModifier = data["bludgeonPercentTemporaryImparmentModifier"].get<uint32_t>();
	bludgeonStepsTillHealedModifier = data["bludgeonStepsTillHealedModifier"].get<uint32_t>();
	bodyHardnessModifier = data["bodyHardnessModifier"].get<float>();
	chanceToWaitInsteadOfWander = data["chanceToWaitInsteadOfWander"].get<float>();
	constructObjectivePriority = data["constructObjectivePriority"].get<uint32_t>();
	constructSkillModifier = data["constructSkillModifier"].get<float>();
	constructStrengthModifier = data["constructStrengthModifier"].get<float>();
	craftObjectivePriority = data["craftObjectivePriority"].get<uint32_t>();
	cutBleedVoumeRateModifier = data["cutBleedVoumeRateModifier"].get<uint32_t>();
	cutPercentPermanantImparmentModifier = data["cutPercentPermanantImparmentModifier"].get<uint32_t>();
	cutPercentTemporaryImparmentModifier = data["cutPercentTemporaryImparmentModifier"].get<uint32_t>();
	cutStepsTillHealedModifier = data["cutStepsTillHealedModifier"].get<uint32_t>();
	deepAmbiantTemperature = data["deepAmbiantTemperature"].get<uint32_t>();
	digMaxSteps = data["digMaxMinutes"].get<float>() * stepsPerMinute;
	digObjectivePriority = data["digObjectivePriority"].get<uint32_t>();
	digSkillModifier = data["digSkillModifier"].get<float>();
	digStrengthModifier = data["digStrengthModifier"].get<float>();
	drinkPriority = data["drinkPriority"].get<uint32_t>();
	eatPriority = data["eatPriority"].get<uint32_t>();
	equipPriority = data["equipPriority"].get<uint32_t>();
	exterminateCheckFrequency = data["exterminateCheckFrequencySeconds"].get<float>() * stepsPerSecond;
	exterminatePriority = data["exterminatePriority"].get<uint32_t>();
	fatPierceForceCost = data["fatPierceForceCost"].get<float>();
	fireRampDownPhaseDurationFraction = data["fireRampDownPhaseDurationFraction"].get<float>();
	flankingModifier = data["flankingModifier"].get<float>();
	forceAbsorbedPiercedModifier = data["forceAbsorbedPiercedModifier"].get<float>();
	forceAbsorbedUnpiercedModifier = data["forceAbsorbedUnpiercedModifier"].get<float>();
	fractionAttackCoolDownReductionPerPointOfDextarity = data["fractionAttackCoolDownReductionPerPointOfDextarity"].get<float>() * stepsPerSecond;
	getIntoAttackPositionMaxRange = data["getIntoAttackPositionMaxRange"].get<uint32_t>();
	getToSafeTemperaturePriority = data["getToSafeTemperaturePriority"].get<uint32_t>();
	givePlantsFluidDelaySteps = data["givePlantsFluidDelaySeconds"].get<float>() * stepsPerSecond;
	givePlantsFluidPriority = data["givePlantsFluidPriority"].get<uint32_t>();
	goToPriority = data["goToPriority"].get<uint32_t>();
	goUpMoveCost = data["goUpMoveCost"].get<MoveCost>();
	harvestEventDuration = data["harvestEventDurationSeconds"].get<float>() * stepsPerSecond;
	harvestPriority = data["harvestPriority"].get<uint32_t>();
	heatDisipatesAtDistanceExponent = data["heatDisipatesAtDistanceExponent"].get<float>();
	heatFractionForBurn = data["heatFractionForBurn"].get<float>();
	heatFractionForSmoulder = data["heatFractionForSmoulder"].get<float>();
	heatRadianceMinimum = data["heatRadianceMinimum"].get<Temperature>();
	hitAreaToBodyPartVolumeRatioForFatalStrikeToVitalArea = data["hitAreaToBodyPartVolumeRatioForFatalStrikeToVitalArea"].get<float>();
	hitScaleModifier = data["hitScaleModifier"].get<uint32_t>();
	impassibleItemVolume = data["impassibleItemVolume"].get<Volume>();
	installItemDuration = data["installItemDurationSeconds"].get<float>() * stepsPerSecond;
	installItemPriority = data["installItemPriority"].get<uint32_t>();
	itemQualityCombatModifier = data["itemQualityCombatModifier"].get<float>();
	itemQualityModifier = data["itemQualityModifier"].get<float>();
	itemSkillModifier = data["itemSkillModifier"].get<float>();
	itemTypeCombatModifier = data["itemTypeCombatModifier"].get<float>();
	itemTypeCombatScoreModifier = data["itemTypeCombatScoreModifier"].get<float>();
	itemWearCombatModifier = data["itemWearCombatModifier"].get<float>();
	itemWearModifier = data["itemWearModifier"].get<float>();
	killPriority = data["killPriority"].get<uint32_t>();
	lakeDepthModifier = data["lakeDepthModifier"].get<double>();
	lakeRadiusModifier = data["lakeRadiusModifier"].get<double>();
	loadDelaySteps = data["loadDelaySeconds"].get<float>() * stepsPerSecond;
	locationBucketSize = data["locationBucketSize"].get<DistanceInBlocks>();
	massCarryMaximimMovementRatio = data["massCarryMaximimMovementRatio"].get<float>();
	maxAnimalInsertLocationSearchRetries = data["maxAnimalInsertLocationSearchRetries"].get<uint32_t>();
	maxBlockVolume = data["maxBlockVolume"].get<Volume>();
	maxBlockVolumeHardLimit = data["maxBlockVolumeHardLimit"].get<Volume>();
	maxBlocksToLookForBetterFood = data["maxBlocksToLookForBetterFood"].get<DistanceInBlocks>();
	maxDistanceToLookForEatingLocation = data["maxDistanceToLookForEatingLocation"].get<DistanceInBlocks>();
	maxDistanceVisionModifier = data["maxDistanceVisionModifier"].get<float>();
	maxNumberOfWorkersForConstructionProject = data["maxNumberOfWorkersForConstructionProject"].get<Quantity>();
	maxNumberOfWorkersForDigProject = data["maxNumberOfWorkersForDigProject"].get<Quantity>();
	maxNumberOfWorkersForWoodCuttingProject = data["maxNumberOfWorkersForWoodCuttingProject"].get<Quantity>();
	maxRangeToSearchForCraftingRequirements = data["maxRangeToSearchForCraftingRequirements"].get<DistanceInBlocks>();
	maxRangeToSearchForStockPileItems = data["maxRangeToSearchForStockPileItems"].get<DistanceInBlocks>();
	maxRangeToSearchForStockPiles = data["maxRangeToSearchForStockPiles"].get<DistanceInBlocks>();
	maxRangeToSearchForDigDesignations = data["maxRangeToSearchForDigDesignations"].get<DistanceInBlocks>();
	maxRangeToSearchForConstructionDesignations = data["maxRangeToSearchForConstructionDesignations"].get<DistanceInBlocks>();
	maxRangeToSearchForWoodCuttingDesignations = data["maxRangeToSearchForWoodCuttingDesignations"].get<DistanceInBlocks>();
	maxRangeToSearchForHorticultureDesignations = data["maxRangeToSearchForHorticultureDesignations"].get<DistanceInBlocks>();
	maxSkillLevel = data["maxSkillLevel"].get<uint32_t>();
	maxStaminaPointsBase = data["maxStaminaPointsBase"].get<uint32_t>();
	maxWorkersForStockPileProject = data["maxWorkersForStockPileProject"].get<Quantity>();
	maxZLevelForDeepAmbiantTemperature = data["maxZLevelForDeepAmbiantTemperature"].get<DistanceInBlocks>();
	maximumDurationToWaitInsteadOfWander = data["maximumDurationToWaitInsteadOfWanderMinutes"].get<float>() * stepsPerMinute;
	maximumRainIntensityModifier = data["maximumRainIntensityModifier"].get<float>();
	maximumStepsBetweenRainPerPercentHumidity = data["maximumDaysBetweenRainPerPercentHumidity"].get<float>() * stepsPerDay;
	maximumStepsRainPerPercentHumidity = data["maximumSecondsRainPerPercentHumidity"].get<float>() * stepsPerSecond;
	metersHeightCarvedByRivers = data["metersHeightCarvedByRivers"].get<Meters>();
	metersPerUnitElevationLociiIntensity = data["metersPerUnitElevationLociiIntensity"].get<Meters>();
	minimumAltitudeForHeadwaterFormation = data["minimumAltitudeForHeadwaterFormation"].get<Meters>();
	minimumAttackCoolDownModifier = data["minimumAttackCoolDownModifier"].get<float>();
	minimumDurationToWaitInsteadOfWander = data["minimumDurationToWaitInsteadOfWanderMinutes"].get<float>() * stepsPerMinute;
	minimumHaulSpeedInital = data["minimumHaulSpeedInital"].get<Speed>();
	minimumOverloadRatio = data["minimumOverloadRatio"].get<float>();
	minimumPercentFoliageForGrow = data["minimumPercentFoliageForGrow"].get<Percent>();
	minimumPercentGrowthForWoodCutting = data["minimumPercentGrowthForWoodCutting"].get<Percent>();
	minimumRainIntensityModifier = data["minimumRainIntensityModifier"].get<float>();
	minimumStepsBetweenRainPerPercentHumidity = data["minimumDaysBetweenRainPerPercentHumidity"].get<float>() * stepsPerDay;
	minimumStepsRainPerPercentHumidity = data["minimumSecondsRainPerPercentHumidity"].get<float>() * stepsPerSecond;
	minimumVolumeOfFluidToBreath = data["minimumVolumeOfFluidToBreath"].get<CollisionVolume>();
	moveTryAttemptsBeforeDetour = data["moveTryAttemptsBeforeDetour"].get<uint32_t>();
	musclePierceForceCost = data["musclePierceForceCost"].get<float>();
	objectivePrioiorityKill = data["objectivePrioiorityKill"].get<uint32_t>();
	objectivePrioritySleep = data["objectivePrioritySleep"].get<uint32_t>();
	pathHuristicConstant = data["pathHuristicConstant"].get<float>();
	percentHeightCarvedByRivers = data["percentHeightCarvedByRivers"].get<Percent>();
	percentHungerAcceptableDesireModifier = data["percentHungerAcceptableDesireModifier"].get<Percent>();
	percentOfPlantMassWhichIsFoliage = data["percentOfPlantMassWhichIsFoliage"].get<Percent>();
	percentPermanantImparmentMinimum = data["percentPermanantImparmentMinimum"].get<uint32_t>();
	pierceBleedVoumeRateModifier = data["pierceBleedVoumeRateModifier"].get<uint32_t>();
	pierceBoneModifier = data["pierceBoneModifier"].get<float>();
	pierceFatModifier = data["pierceFatModifier"].get<float>();
	pierceModifier = data["pierceModifier"].get<float>();
	pierceMuscelModifier = data["pierceMuscelModifier"].get<float>();
	piercePercentPermanantImparmentModifier = data["piercePercentPermanantImparmentModifier"].get<uint32_t>();
	piercePercentTemporaryImparmentModifier = data["piercePercentTemporaryImparmentModifier"].get<uint32_t>();
	pierceSkinModifier = data["pierceSkinModifier"].get<float>();
	pierceStepsTillHealedModifier = data["pierceStepsTillHealedModifier"].get<uint32_t>();
	pointsOfCombatScorePerUnitOfAgility = data["pointsOfCombatScorePerUnitOfAgility"].get<float>();
	pointsOfCombatScorePerUnitOfDextarity = data["pointsOfCombatScorePerUnitOfDextarity"].get<float>();
	pointsOfCombatScorePerUnitOfStrength = data["pointsOfCombatScorePerUnitOfStrength"].get<float>();
	projectTryToMakeSubprojectRetriesBeforeProjectDelay = data["projectTryToMakeSubprojectRetriesBeforeProjectDelay"].get<uint32_t>();
	projectDelayAfterExauhstingSubprojectRetries = data["projectDelayAfterExauhstingSubprojectRetriesSeconds"] .get<uint32_t>() * stepsPerSecond;
	projectileHitChanceFallsOffWithRangeExponent = data["projectileHitChanceFallsOffWithRangeExponent"].get<uint32_t>();
	projectileHitPercentPerPointAttackTypeCombatScore = data["projectileHitPercentPerPointAttackTypeCombatScore"].get<float>();
	projectileHitPercentPerPointDextarity = data["projectileHitPercentPerPointDextarity"].get<float>();
	projectileHitPercentPerPointQuality = data["projectileHitPercentPerPointQuality"].get<float>();
	projectileHitPercentPerPointTargetCombatScore = data["projectileHitPercentPerPointTargetCombatScore"].get<float>();
	projectileHitPercentPerPointWear = data["projectileHitPercentPerPointWear"].get<float>();
	projectileHitPercentPerSkillPoint = data["projectileHitPercentPerSkillPoint"].get<float>();
	projectileHitPercentPerUnitVolume = data["projectileHitPercentPerUnitVolume"].get<float>();
	projectileMedianTargetVolume = data["projectileMedianTargetVolume"].get<Volume>();
	rainMaximumOffset = data["rainMaximumOffset"].get<DistanceInBlocks>();
	rainMaximumSpacing = data["rainMaximumSpacing"].get<DistanceInBlocks>();
	rainMaximumSpacing = data["rainMaximumSpacing"].get<DistanceInBlocks>();
	rainWriteStepFreqency = data["rainWriteStepFreqencySeconds"].get<float>() * stepsPerSecond;
	ratioOfHitAreaToBodyPartVolumeForSever = data["ratioOfHitAreaToBodyPartVolumeForSever"].get<float>();
	ratioOfTotalBodyVolumeWhichIsBlood = data["ratioOfTotalBodyVolumeWhichIsBlood"].get<float>();
	ratioWoundsCloseDelayToBleedVolume = data["ratioWoundsCloseDelayToBleedVolumeSeconds"].get<float>() * stepsPerSecond;
	restIntervalSteps = data["restIntervalSeconds"].get<uint32_t>() * stepsPerSecond;
	rollingMassModifier = data["rollingMassModifier"].get<float>();
	scaleOfHumanBody = data["scaleOfHumanBody"].get<uint32_t>();
	skinPierceForceCost = data["skinPierceForceCost"].get<float>();
	sleepObjectivePriority = data["sleepObjectivePriority"].get<uint32_t>();
	sowSeedsPriority = data["sowSeedsPriority"].get<uint32_t>();
	sowSeedsStepsDuration = data["sowSeedsStepsDurationSeconds"].get<float>() * stepsPerSecond;
	staminaPointsPerRestPeriod = data["staminaPointsPerRestPeriod"].get<uint32_t>();
	stationPriority = data["stationPriority"].get<uint32_t>();
	stepsFrequencyToLookForHaulSubprojects = data["secondsFrequencyToLookForHaulSubprojects"].get<float>() * stepsPerSecond;
	stepsTillDiePlantPriorityOveride = data["hoursTillDiePlantPriorityOveride"].get<uint32_t>() * stepsPerHour;
	stepsToDelayBeforeTryingAgainToCompleteAnObjective = data["secondsToDelayBeforeTryingAgainToCompleteAnObjective"].get<float>() * stepsPerSecond;
	stepsToDelayBeforeTryingAgainToFollowLeader = data["secondsToDelayBeforeTryingAgainToFollowLeader"].get<float>() * stepsPerSecond;
	stepsToDelayBeforeTryingAgainToReserveItemsAndActorsForAProject = data["minutesToDelayBeforeTryingAgaintoReserveItemsAndActorsForAProject"].get<uint32_t>() * stepsPerMinute;
	stepsToDisableStockPile = data["minutesToDisableStockPile"].get<float>() * stepsPerMinute;
	stepsToDrink = data["secondsToDrink"].get<float>() * stepsPerSecond;
	stepsToEat = data["secondsToEat"].get<float>() * stepsPerSecond;
	stockPilePriority = data["stockPilePriority"].get<uint32_t>();
	targetedHaulPriority = data["targetedHaulPriority"].get<uint32_t>();
	unarmedCombatScoreBase = data["unarmedCombatScoreBase"].get<uint32_t>();
	unarmedCombatSkillModifier = data["unarmedCombatSkillModifier"].get<float>();
	undergroundAmbiantTemperature = data["undergroundAmbiantTemperature"].get<uint32_t>();
	unitsBodyMassPerUnitFluidConsumed = data["unitsBodyMassPerUnitFluidConsumed"].get<uint32_t>();
	unitsBodyMassPerUnitFoodConsumed = data["unitsBodyMassPerUnitFoodConsumed"].get<Mass>();
	unitsOfAttackForcePerUnitOfStrength = data["unitsOfAttackForcePerUnitOfStrength"].get<float>();
	unitsOfCarryMassPerUnitOfStrength = data["unitsOfCarryMassPerUnitOfStrength"].get<float>();
	unitsOfMoveSpeedPerUnitOfAgility = data["unitsOfMoveSpeedPerUnitOfAgility"].get<float>();
	unitsOfWoundAreaPerUnitItemScaleFactor = data["unitsOfWoundAreaPerUnitItemScaleFactor"].get<uint32_t>();
	visionFacadeReservationSize = data["visionFacadeReservationSize"].get<size_t>();
	visionThreadingBatchSize = data["visionThreadingBatchSize"].get<VisionFacadeIndex>();
	wanderMaximumNumberOfBlocks = data["wanderMaximumNumberOfBlocks"].get<uint32_t>();
	wanderMinimimNumberOfBlocks = data["wanderMinimumNumberOfBlocks"].get<uint32_t>();
	woodCuttingMaxSteps = data["woodCuttingMaxMinutes"].get<float>() * stepsPerMinute;
	woodCuttingObjectivePriority = data["woodCuttingObjectivePriority"].get<uint32_t>();
	woodCuttingSkillModifier = data["woodCuttingSkillModifier"].get<float>();
	woodCuttingStrengthModifier = data["woodCuttingStrengthModifier"].get<float>();
	yokeDelaySteps = data["yokeDelaySeconds"].get<float>() * stepsPerSecond;
}
