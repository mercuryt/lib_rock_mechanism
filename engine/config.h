#pragma once

#include "../lib/json.hpp"
#include "types.h"
#include <cmath>
#include <cstdint>
#include <fstream>
using Json = nlohmann::json;
namespace Config
{
	inline Step addToStockPileDelaySteps;
	inline Volume maxBlockVolume;
	inline Volume maxBlockVolumeHardLimit;
	inline uint32_t maxNumberOfWorkersForDigProject;
	inline uint32_t maxNumberOfWorkersForConstructionProject;
	inline float unarmedCombatSkillModifier;
	inline float itemSkillModifier;
	inline float itemQualityModifier;
	inline float itemWearModifier;
	inline float itemTypeCombatScoreModifier;
	inline float flankingModifier;
	inline float adjacentAllyCombatScoreBonusModifier;
	inline Step yokeDelaySteps;
	inline Step loadDelaySteps;
	inline float ratioOfTotalBodyVolumeWhichIsBlood;
	inline float bodyHardnessModifier;
	inline float pierceBoneModifier;
	inline float pierceMuscelModifier;
	inline float pierceFatModifier;
	inline float pierceSkinModifier;
	inline float ratioWoundsCloseDelayToBleedVolume;
	inline uint32_t bleedEventBaseFrequency;
	inline Step bleedPassOutDuration;
	inline float bleedToUnconciousessRatio;
	inline float bleedToDeathRatio;
	inline float musclePierceForceCost;
	inline float fatPierceForceCost;
	inline float skinPierceForceCost;
	inline Step stepsTillDiePlantPriorityOveride;
	inline float maxDistanceVisionModifier;
	inline Percent percentOfPlantMassWhichIsFoliage;
	inline Percent minimumPercentFoliageForGrow;
	inline Step installItemDuration;
	inline uint32_t objectivePrioiorityKill;
	inline float pathHuristicConstant;
	inline Volume impassibleItemVolume;
	inline float massCarryMaximimMovementRatio;
	inline float rollingMassModifier;
	inline constexpr Step actorDoVisionInterval = 10;
	inline uint32_t moveTryAttemptsBeforeDetour;
	inline Step sowSeedsStepsDuration;
	inline uint32_t sowSeedsPriority;
	inline constexpr uint32_t fluidsSeepDiagonalModifier = 100;
	inline float fractionAttackCoolDownReductionPerPointOfDextarity;
	inline float unitsOfMoveSpeedPerUnitOfAgility;
	inline float unitsOfCarryMassPerUnitOfStrength;
	inline uint32_t objectivePrioritySleep;
	inline Step digMaxSteps;
	inline float digStrengthModifier;
	inline float digSkillModifier;
	inline uint32_t digObjectivePriority;
	inline Step statsGrowthUpdateFrequency;
	inline float heatFractionForSmoulder;
	inline float heatFractionForBurn;
	inline float fireRampDownPhaseDurationFraction;
	inline Step stepsToDrink;
	inline Step stepsToEat;
	inline uint32_t drinkPriority;
	inline uint32_t eatPriority;
	inline uint32_t maxDistanceToLookForEatingLocation;
	inline Step harvestEventDuration;
	inline uint32_t harvestPriority;
	inline Mass unitsBodyMassPerUnitFoodConsumed;
	inline uint32_t maxBlocksToLookForBetterFood;
	inline Percent percentHungerAcceptableDesireModifier;
	inline float constructStrengthModifier;
	inline float constructSkillModifier;
	inline uint32_t constructObjectivePriority;
	inline uint32_t craftObjectivePriority;
	inline uint32_t locationBucketSize;
	inline float forceAbsorbedPiercedModifier;
	inline float forceAbsorbedUnpiercedModifier;
	inline float pierceModifier;
	inline constexpr bool fluidPiston = false;
	inline uint32_t visionThreadingBatchSize;
	inline Step givePlantsFluidDelaySteps;
	inline uint32_t maxSkillLevel;
	inline uint32_t killPriority;
	inline float unitsOfAttackForcePerUnitOfStrength;
	inline Step attackCoolDownDurationBaseSteps;
	inline float itemTypeCombatModifier;
	inline float attackSkillCombatModifier;
	inline float itemQualityCombatModifier;
	inline float itemWearCombatModifier;
	inline uint32_t givePlantsFluidPriority;
	inline uint32_t hoursPerDay;
	inline uint32_t minutesPerHour;
	inline uint32_t secondsPerMinute;
	inline Step stepsPerSecond;
	inline Step stepsPerMinute;
	inline Step stepsPerHour;
	inline Step stepsPerDay;
	inline Step stepsPerYear;
	inline uint32_t sleepObjectivePriority;
	inline uint32_t minimumHaulSpeedInital;
	inline Step stepsFrequencyToLookForHaulSubprojects;
	inline uint32_t maxZLevelForDeepAmbiantTemperature;
	inline Temperature deepAmbiantTemperature;
	inline Temperature undergroundAmbiantTemperature;
	inline uint32_t stockPilePriority;
	inline uint32_t getToSafeTemperaturePriority;
	inline uint32_t unitsOfWoundAreaPerUnitItemScaleFactor;
	inline uint32_t scaleOfHumanBody;
	inline uint32_t pierceStepsTillHealedModifier;
	inline uint32_t cutStepsTillHealedModifier;
	inline uint32_t bludgeonStepsTillHealedModifier;
	inline Step baseHealDelaySteps;
	inline uint32_t pierceBleedVoumeRateModifier;
	inline uint32_t cutBleedVoumeRateModifier;
	inline uint32_t bludgeonBleedVoumeRateModifier;
	inline uint32_t piercePercentTemporaryImparmentModifier;
	inline uint32_t cutPercentTemporaryImparmentModifier;
	inline uint32_t bludgeonPercentTemporaryImparmentModifier;
	inline uint32_t piercePercentPermanantImparmentModifier;
	inline uint32_t cutPercentPermanantImparmentModifier;
	inline uint32_t bludgeonPercentPermanantImparmentModifier;
	inline Percent percentPermanantImparmentMinimum;
	inline float heatDisipatesAtDistanceExponent;
	inline uint32_t heatRadianceMinimum;
	inline uint16_t daysPerYear;
	inline uint32_t rainFrequencyModifier;
	inline Step restIntervalSteps;
	inline uint32_t staminaPointsPerRestPeriod;
	inline uint32_t maxStaminaPointsBase;
	inline uint32_t unitsBodyMassPerUnitFluidConsumed;
	inline uint32_t baseMoveCost;
	inline uint32_t goUpMoveCost;
	inline uint32_t wanderMinimimNumberOfBlocks;
	inline uint32_t wanderMaximumNumberOfBlocks;
	inline Step stepsToDelayBeforeTryingAgainToCompleteAnObjective;
	inline uint32_t hitScaleModifier;
	inline uint32_t hitAreaToBodyPartVolumeRatioForFatalStrikeToVitalArea;
	inline float ratioOfHitAreaToBodyPartVolumeForSever;
	inline uint32_t unarmedCombatScoreBase;
	inline uint32_t targetedHaulPriority;
	inline uint32_t stationPriority;
	inline Step stepsToDelayBeforeTryingAgainToFollowLeader;
	inline uint32_t getIntoAttackPositionMaxRange;
	inline Step stepsToDelayBeforeTryingAgainToReserveItemsAndActorsForAProject;
	inline Step stepsToDisableStockPile;
	inline uint8_t projectTryToMakeSubprojectRetriesBeforeProjectDelay;
	inline uint32_t maxWorkersForStockPileProject;
	inline uint32_t averageItemQuality;
	inline float pointsOfCombatScorePerUnitOfStrength;
	inline float pointsOfCombatScorePerUnitOfAgility;
	inline float pointsOfCombatScorePerUnitOfDextarity;
	inline uint32_t projectileHitChanceFallsOffWithRangeExponent;
	inline float projectileHitPercentPerSkillPoint;
	inline float projectileHitPercentPerUnitVolume;
	inline float projectileHitPercentPerPointDextarity;
	inline float projectileHitPercentPerPointQuality;
	inline float projectileHitPercentPerPointWear;
	inline float projectileHitPercentPerPointTargetCombatScore;
	inline Volume projectileMedianTargetVolume;
	inline float projectileHitPercentPerPointAttackTypeCombatScore;
	inline uint32_t attackCoolDownDurationBaseDextarity;
	inline uint32_t goToPriority;
	inline uint32_t maxNumberOfWorkersForWoodCuttingProject;
	inline float woodCuttingStrengthModifier;
	inline float woodCuttingSkillModifier;
	inline uint32_t woodCuttingObjectivePriority;
	inline Step woodCuttingMaxSteps;
	inline uint32_t equipPriority;
	inline uint32_t installItemPriority;
	inline Percent minimumPercentGrowthForWoodCutting;
	inline Meters metersPerUnitElevationLociiIntensity;
	inline float averageNumberOfRiversPerCandidate;
	inline Meters metersHeightCarvedByRivers;
	inline Percent percentHeightCarvedByRivers;
	inline Meters minimumAltitudeForHeadwaterFormation;
	inline float blocksPerMeter;
	inline size_t averageLandHeightBlocks;
	inline uint32_t maxAnimalInsertLocationSearchRetries;
	inline uint32_t lakeRadiusModifier;
	inline uint32_t lakeDepthModifier;
	//inline uint32_t medicalPriority;
	//inline uint32_t medicalProjectDelaySteps;
	inline float minimumRainIntensityModifier;
	inline float maximumRainIntensityModifier;
	inline float minimumStepsRainPerPercentHumidity;
	inline float maximumStepsRainPerPercentHumidity;
	inline float minimumStepsBetweenRainPerPercentHumidity;
	inline float maximumStepsBetweenRainPerPercentHumidity;
	inline uint32_t exterminatePriority;
	inline Step exterminateCheckFrequency;
	inline float minimumAttackCoolDownModifier;
	inline CollisionVolume minimumVolumeOfFluidToBreath;
	inline Step minimumDurationToWaitInsteadOfWander;
	inline Step maximumDurationToWaitInsteadOfWander;
	inline float chanceToWaitInsteadOfWander;
	inline float minimumOverloadRatio;

	inline uint32_t convertBodyPartVolumeToArea(uint32_t volume){ return sqrt(volume); }
	inline void load()
	{
		std::ifstream f("data/config.json");
		Json data = Json::parse(f);
		hoursPerDay = data["hoursPerDay"].get<uint32_t>();
		minutesPerHour = data["minutesPerHour"].get<uint32_t>();
		secondsPerMinute = data["secondsPerMinute"].get<uint32_t>();
		daysPerYear = data["daysPerYear"].get<uint16_t>();
		stepsPerSecond = data["stepsPerSecond"].get<Step>();
		stepsPerMinute = stepsPerSecond * secondsPerMinute;
		stepsPerHour = stepsPerMinute * minutesPerHour;
		stepsPerDay = stepsPerHour * hoursPerDay;
		stepsPerYear = daysPerYear * stepsPerDay;
		addToStockPileDelaySteps = data["addToStockPileDelaySteps"].get<Step>();
		maxBlockVolume = data["maxBlockVolume"].get<Volume>();
		maxBlockVolumeHardLimit = data["maxBlockVolumeHardLimit"].get<Volume>();
		maxNumberOfWorkersForDigProject = data["maxNumberOfWorkersForDigProject"].get<uint32_t>();
		maxNumberOfWorkersForConstructionProject = data["maxNumberOfWorkersForConstructionProject"].get<uint32_t>();
		unarmedCombatSkillModifier = data["unarmedCombatSkillModifier"].get<float>();
		itemSkillModifier = data["itemSkillModifier"].get<float>();
		itemQualityModifier = data["itemQualityModifier"].get<float>();
		itemWearModifier = data["itemWearModifier"].get<float>();
		itemTypeCombatScoreModifier = data["itemTypeCombatScoreModifier"].get<float>();
		flankingModifier = data["flankingModifier"].get<float>();
		adjacentAllyCombatScoreBonusModifier = data["adjacentAllyCombatScoreBonusModifier"].get<float>();
		yokeDelaySteps = data["yokeDelaySteps"].get<Step>();
		loadDelaySteps = data["loadDelaySteps"].get<Step>();
		ratioOfTotalBodyVolumeWhichIsBlood = data["ratioOfTotalBodyVolumeWhichIsBlood"].get<float>();
		bodyHardnessModifier = data["bodyHardnessModifier"].get<float>();
		pierceBoneModifier = data["pierceBoneModifier"].get<float>();
		pierceMuscelModifier = data["pierceMuscelModifier"].get<float>();
		pierceFatModifier = data["pierceFatModifier"].get<float>();
		pierceSkinModifier = data["pierceSkinModifier"].get<float>();
		ratioWoundsCloseDelayToBleedVolume = data["ratioWoundsCloseDelayToBleedVolume"].get<float>();
		bleedEventBaseFrequency = data["bleedEventBaseFrequency"].get<uint32_t>();
		bleedPassOutDuration = data["bleedPassOutDuration"].get<Step>();
		bleedToUnconciousessRatio = data["bleedToUnconciousessRatio"].get<float>();
		bleedToDeathRatio = data["bleedToDeathRatio"].get<float>();
		musclePierceForceCost = data["musclePierceForceCost"].get<float>();
		fatPierceForceCost = data["fatPierceForceCost"].get<float>();
		skinPierceForceCost = data["skinPierceForceCost"].get<float>();
		stepsTillDiePlantPriorityOveride = data["hoursTillDiePlantPriorityOveride"].get<uint32_t>() * stepsPerHour;
		maxDistanceVisionModifier = data["maxDistanceVisionModifier"].get<float>();
		percentOfPlantMassWhichIsFoliage = data["percentOfPlantMassWhichIsFoliage"].get<Percent>();
		minimumPercentFoliageForGrow = data["minimumPercentFoliageForGrow"].get<Percent>();
		installItemDuration = data["installItemDurationSeconds"].get<uint32_t>() * stepsPerSecond;
		objectivePrioiorityKill = data["objectivePrioiorityKill"].get<uint32_t>();
		pathHuristicConstant = data["pathHuristicConstant"].get<float>();
		impassibleItemVolume = data["impassibleItemVolume"].get<Volume>();
		massCarryMaximimMovementRatio = data["massCarryMaximimMovementRatio"].get<float>();
		rollingMassModifier = data["rollingMassModifier"].get<float>();
		moveTryAttemptsBeforeDetour = data["moveTryAttemptsBeforeDetour"].get<uint32_t>();
		sowSeedsStepsDuration = data["sowSeedsStepsDuration"].get<Step>();
		sowSeedsPriority = data["sowSeedsPriority"].get<uint32_t>();
		fractionAttackCoolDownReductionPerPointOfDextarity = data["fractionAttackCoolDownReductionPerPointOfDextarity"].get<float>() * stepsPerSecond;
		unitsOfMoveSpeedPerUnitOfAgility = data["unitsOfMoveSpeedPerUnitOfAgility"].get<float>();
		unitsOfCarryMassPerUnitOfStrength = data["unitsOfCarryMassPerUnitOfStrength"].get<float>();
		objectivePrioritySleep = data["objectivePrioritySleep"].get<uint32_t>();
		digMaxSteps = data["digMaxMinutes"].get<uint32_t>() * stepsPerMinute;
		digStrengthModifier = data["digStrengthModifier"].get<float>();
		digSkillModifier = data["digSkillModifier"].get<float>();
		digObjectivePriority = data["digObjectivePriority"].get<uint32_t>();
		statsGrowthUpdateFrequency = data["statsGrowthUpdateFrequency"].get<Step>();
		heatFractionForSmoulder = data["heatFractionForSmoulder"].get<float>();
		heatFractionForBurn = data["heatFractionForBurn"].get<float>();
		fireRampDownPhaseDurationFraction = data["fireRampDownPhaseDurationFraction"].get<float>();
		stepsToDrink = data["secondsToDrink"].get<uint32_t>() * stepsPerSecond;
		stepsToEat = data["secondsToEat"].get<Step>() * stepsPerSecond;
		drinkPriority = data["drinkPriority"].get<uint32_t>();
		eatPriority = data["eatPriority"].get<uint32_t>();
		maxDistanceToLookForEatingLocation = data["maxDistanceToLookForEatingLocation"].get<uint32_t>();
		harvestEventDuration = data["harvestEventDuration"].get<Step>();
		harvestPriority = data["harvestPriority"].get<uint32_t>();
		unitsBodyMassPerUnitFoodConsumed = data["unitsBodyMassPerUnitFoodConsumed"].get<Mass>();
		maxBlocksToLookForBetterFood = data["maxBlocksToLookForBetterFood"].get<uint32_t>();
		percentHungerAcceptableDesireModifier = data["percentHungerAcceptableDesireModifier"].get<Percent>();
		constructStrengthModifier = data["constructStrengthModifier"].get<float>();
		constructSkillModifier = data["constructSkillModifier"].get<float>();
		constructObjectivePriority = data["constructObjectivePriority"].get<uint32_t>();
		craftObjectivePriority = data["craftObjectivePriority"].get<uint32_t>();
		locationBucketSize = data["locationBucketSize"].get<uint32_t>();
		forceAbsorbedPiercedModifier = data["forceAbsorbedPiercedModifier"].get<float>();
		forceAbsorbedUnpiercedModifier = data["forceAbsorbedUnpiercedModifier"].get<float>();
		pierceModifier = data["pierceModifier"].get<float>();
		visionThreadingBatchSize = data["visionThreadingBatchSize"].get<uint32_t>();
		givePlantsFluidDelaySteps = data["givePlantsFluidDelaySteps"].get<Step>();
		maxSkillLevel = data["maxSkillLevel"].get<uint32_t>();
		killPriority = data["killPriority"].get<uint32_t>();
		unitsOfAttackForcePerUnitOfStrength = data["unitsOfAttackForcePerUnitOfStrength"].get<float>();
		attackCoolDownDurationBaseSteps = data["attackCoolDownDurationBaseSeconds"].get<Step>() * stepsPerSecond;
		itemTypeCombatModifier = data["itemTypeCombatModifier"].get<float>();
		attackSkillCombatModifier = data["attackSkillCombatModifier"].get<float>();
		itemQualityCombatModifier = data["itemQualityCombatModifier"].get<float>();
		itemWearCombatModifier = data["itemWearCombatModifier"].get<float>();
		givePlantsFluidPriority = data["givePlantsFluidPriority"].get<uint32_t>();
		sleepObjectivePriority = data["sleepObjectivePriority"].get<uint32_t>();
		minimumHaulSpeedInital = data["minimumHaulSpeedInital"].get<uint32_t>();
		stepsFrequencyToLookForHaulSubprojects = data["secondsFrequencyToLookForHaulSubprojects"].get<float>() * stepsPerSecond;
		maxZLevelForDeepAmbiantTemperature = data["maxZLevelForDeepAmbiantTemperature"].get<uint32_t>();
		deepAmbiantTemperature = data["deepAmbiantTemperature"].get<uint32_t>();
		undergroundAmbiantTemperature = data["undergroundAmbiantTemperature"].get<uint32_t>();
		stockPilePriority = data["stockPilePriority"].get<uint32_t>();
		getToSafeTemperaturePriority = data["getToSafeTemperaturePriority"].get<uint32_t>();
		unitsOfWoundAreaPerUnitItemScaleFactor = data["unitsOfWoundAreaPerUnitItemScaleFactor"].get<uint32_t>();
		scaleOfHumanBody = data["scaleOfHumanBody"].get<uint32_t>();
		pierceStepsTillHealedModifier = data["pierceStepsTillHealedModifier"].get<uint32_t>();
		cutStepsTillHealedModifier = data["cutStepsTillHealedModifier"].get<uint32_t>();
		bludgeonStepsTillHealedModifier = data["bludgeonStepsTillHealedModifier"].get<uint32_t>();
		baseHealDelaySteps = data["baseHealDelaySteps"].get<Step>();
		pierceBleedVoumeRateModifier = data["pierceBleedVoumeRateModifier"].get<uint32_t>();
		cutBleedVoumeRateModifier = data["cutBleedVoumeRateModifier"].get<uint32_t>();
		bludgeonBleedVoumeRateModifier = data["bludgeonBleedVoumeRateModifier"].get<uint32_t>();
		piercePercentTemporaryImparmentModifier = data["piercePercentTemporaryImparmentModifier"].get<uint32_t>();
		cutPercentTemporaryImparmentModifier = data["cutPercentTemporaryImparmentModifier"].get<uint32_t>();
		bludgeonPercentTemporaryImparmentModifier = data["bludgeonPercentTemporaryImparmentModifier"].get<uint32_t>();
		piercePercentPermanantImparmentModifier = data["piercePercentPermanantImparmentModifier"].get<uint32_t>();
		cutPercentPermanantImparmentModifier = data["cutPercentPermanantImparmentModifier"].get<uint32_t>();
		bludgeonPercentPermanantImparmentModifier = data["bludgeonPercentPermanantImparmentModifier"].get<uint32_t>();
		percentPermanantImparmentMinimum = data["percentPermanantImparmentMinimum"].get<uint32_t>();
		heatDisipatesAtDistanceExponent = data["heatDisipatesAtDistanceExponent"].get<float>();
		heatRadianceMinimum = data["heatRadianceMinimum"].get<uint32_t>();
		rainFrequencyModifier = data["rainFrequencyModifier"].get<uint32_t>();
		restIntervalSteps = data["restIntervalSteps"].get<Step>();
		staminaPointsPerRestPeriod = data["staminaPointsPerRestPeriod"].get<uint32_t>();
		maxStaminaPointsBase = data["maxStaminaPointsBase"].get<uint32_t>();
		unitsBodyMassPerUnitFluidConsumed = data["unitsBodyMassPerUnitFluidConsumed"].get<uint32_t>();
		baseMoveCost = data["baseMoveCost"].get<uint32_t>();
		goUpMoveCost = data["goUpMoveCost"].get<uint32_t>();
		wanderMinimimNumberOfBlocks = data["wanderMinimumNumberOfBlocks"].get<uint32_t>();
		wanderMaximumNumberOfBlocks = data["wanderMaximumNumberOfBlocks"].get<uint32_t>();
		stepsToDelayBeforeTryingAgainToCompleteAnObjective = data["secondsToDelayBeforeTryingAgainToCompleteAnObjective"].get<uint32_t>() * stepsPerSecond;
		hitScaleModifier = data["hitScaleModifier"].get<uint32_t>();
		hitAreaToBodyPartVolumeRatioForFatalStrikeToVitalArea = data["hitAreaToBodyPartVolumeRatioForFatalStrikeToVitalArea"].get<float>();
		ratioOfHitAreaToBodyPartVolumeForSever = data["ratioOfHitAreaToBodyPartVolumeForSever"].get<float>();
		unarmedCombatScoreBase = data["unarmedCombatScoreBase"].get<uint32_t>();
		targetedHaulPriority = data["targetedHaulPriority"].get<uint32_t>();
		stationPriority = data["stationPriority"].get<uint32_t>();
		stepsToDelayBeforeTryingAgainToFollowLeader = data["secondsToDelayBeforeTryingAgainToFollowLeader"].get<uint32_t>() * stepsPerSecond;
		getIntoAttackPositionMaxRange = data["getIntoAttackPositionMaxRange"].get<uint32_t>();
		stepsToDelayBeforeTryingAgainToReserveItemsAndActorsForAProject = data["minutesToDelayBeforeTryingAgaintoReserveItemsAndActorsForAProject"].get<uint32_t>() * stepsPerMinute;
		stepsToDisableStockPile = data["minutesToDisableStockPile"].get<uint32_t>() * stepsPerMinute;
		projectTryToMakeSubprojectRetriesBeforeProjectDelay = data["projectTryToMakeSubprojectRetriesBeforeProjectDelay"].get<uint32_t>();
		maxWorkersForStockPileProject = data["maxWorkersForStockPileProject"].get<uint32_t>();
		averageItemQuality = data["averageItemQuality"].get<uint32_t>();
		pointsOfCombatScorePerUnitOfStrength = data["pointsOfCombatScorePerUnitOfStrength"].get<float>();
		pointsOfCombatScorePerUnitOfAgility = data["pointsOfCombatScorePerUnitOfAgility"].get<float>();
		pointsOfCombatScorePerUnitOfDextarity = data["pointsOfCombatScorePerUnitOfDextarity"].get<float>();
		projectileHitChanceFallsOffWithRangeExponent = data["projectileHitChanceFallsOffWithRangeExponent"].get<uint32_t>();
		projectileHitPercentPerSkillPoint = data["projectileHitPercentPerSkillPoint"].get<float>();
		projectileHitPercentPerUnitVolume = data["projectileHitPercentPerUnitVolume"].get<float>();
		projectileHitPercentPerPointDextarity = data["projectileHitPercentPerPointDextarity"].get<float>();
		projectileHitPercentPerPointQuality = data["projectileHitPercentPerPointQuality"].get<float>();
		projectileHitPercentPerPointWear = data["projectileHitPercentPerPointWear"].get<float>();
		projectileHitPercentPerPointTargetCombatScore = data["projectileHitPercentPerPointTargetCombatScore"].get<float>();
		projectileMedianTargetVolume = data["projectileMedianTargetVolume"].get<Volume>();
		projectileHitPercentPerPointAttackTypeCombatScore = data["projectileHitPercentPerPointAttackTypeCombatScore"].get<float>();
		attackCoolDownDurationBaseDextarity = data["attackCoolDownDurationBaseDextarity"].get<uint32_t>();
		goToPriority = data["goToPriority"].get<uint32_t>();
		maxNumberOfWorkersForWoodCuttingProject = data["maxNumberOfWorkersForWoodCuttingProject"].get<uint32_t>();
		woodCuttingStrengthModifier = data["woodCuttingStrengthModifier"].get<float>();
		woodCuttingSkillModifier = data["woodCuttingSkillModifier"].get<float>();
		woodCuttingObjectivePriority = data["woodCuttingObjectivePriority"].get<uint32_t>();
		woodCuttingMaxSteps = data["woodCuttingMaxMinutes"].get<uint32_t>() * stepsPerMinute;
		equipPriority = data["equipPriority"].get<uint32_t>();
		installItemPriority = data["installItemPriority"].get<uint32_t>();
		minimumPercentGrowthForWoodCutting = data["minimumPercentGrowthForWoodCutting"].get<Percent>();
		metersPerUnitElevationLociiIntensity = data["metersPerUnitElevationLociiIntensity"].get<Meters>();
		averageNumberOfRiversPerCandidate = data["averageNumberOfRiversPerCandidate"].get<float>();
		metersHeightCarvedByRivers = data["metersHeightCarvedByRivers"].get<Meters>();
		percentHeightCarvedByRivers = data["percentHeightCarvedByRivers"].get<Percent>();
		minimumAltitudeForHeadwaterFormation = data["minimumAltitudeForHeadwaterFormation"].get<Meters>();
		blocksPerMeter = data["blocksPerMeter"].get<float>();
		averageLandHeightBlocks = data["averageLandHeightBlocks"].get<float>();
		maxAnimalInsertLocationSearchRetries = data["maxAnimalInsertLocationSearchRetries"].get<uint32_t>();
		lakeRadiusModifier = data["lakeRadiusModifier"].get<double>();
		lakeDepthModifier = data["lakeDepthModifier"].get<double>();
		//medicalPriority = data["medicalPriority"].get<uint32_t>();
		//medicalProjectDelaySteps = data["medicalProjectDelayMinutes"].get<uint32_t>() * stepsPerMinute;
		minimumRainIntensityModifier = data["minimumRainIntensityModifier"].get<float>();
		maximumRainIntensityModifier = data["maximumRainIntensityModifier"].get<float>();
		minimumStepsRainPerPercentHumidity = data["minimumSecondsRainPerPercentHumidity"].get<float>() * Config::stepsPerSecond;
		maximumStepsRainPerPercentHumidity = data["maximumSecondsRainPerPercentHumidity"].get<float>() * Config::stepsPerSecond;
		minimumStepsBetweenRainPerPercentHumidity = data["minimumDaysBetweenRainPerPercentHumidity"].get<float>() * Config::stepsPerDay;
		maximumStepsBetweenRainPerPercentHumidity = data["maximumDaysBetweenRainPerPercentHumidity"].get<float>() * Config::stepsPerDay;
		exterminatePriority = data["exterminatePriority"].get<uint32_t>();
		exterminateCheckFrequency = data["exterminateCheckFrequencySeconds"].get<float>() * Config::stepsPerSecond;
		minimumAttackCoolDownModifier = data["minimumAttackCoolDownModifier"].get<float>();
		minimumVolumeOfFluidToBreath = data["minimumVolumeOfFluidToBreath"].get<CollisionVolume>();
		minimumDurationToWaitInsteadOfWander = data["minimumDurationToWaitInsteadOfWanderMinutes"].get<uint32_t>() * Config::stepsPerMinute;
		maximumDurationToWaitInsteadOfWander = data["maximumDurationToWaitInsteadOfWanderMinutes"].get<uint32_t>() * Config::stepsPerMinute;
		chanceToWaitInsteadOfWander = data["chanceToWaitInsteadOfWander"].get<float>();
		minimumOverloadRatio = data["minimumOverloadRatio"].get<float>();
	}
}
