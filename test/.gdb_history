n
p adjacent->toS()
p open
p block
p block->toS()
n
p open
n
p open
c
n
p open
r
p open
c
p open
r
b routeRequest.cpp:54
c
p moveCost
p proposedRouteStep 
c
p proposedRouteStep 
p open
r
c
p proposedRouteStep 
c
p proposedRouteStep 
p open
r
n
p proposedRouteStep 
c
p proposedRouteStep 
c
p proposedRouteStep 
r
r
whe
p routeRequest.m_result 
p routeRequest.m_result[0]->toS()
p routeRequest.m_result[1]->toS()
p routeRequest.m_result[2]->toS()
p routeRequest.m_result[3]->toS()
p routeRequest.m_result[4]->toS()
p routeRequest.m_result[5]->toS()
p routeRequest.m_result[6]->toS()
p routeRequest.m_result[7]->toS()
p routeRequest.m_result[8]->toS()
p routeRequest.m_result[9]->toS()
r
p routeRequest.m_result[9]->toS()
p routeRequest.m_result
r
p routeRequest.m_result
p routeRequest.m_result[0]->toS()
p routeRequest.m_result[8]->toS()
p routeRequest.m_result[4]->toS()
p routeRequest.m_result[5]->toS()
r
p actor.m_location->toS()
p actor.m_route
p actor.m_route.get()
p *actor.m_route
p *actor.m_route[0]
p (*actor.m_route)[0]
p (*actor.m_route)[0]->toS()
r
p actor.m_location->toS()
b hasScheduledEvents.cpp:5
r
n
p block->toS()
p block->anyoneCanEnterEver ()
p block->canEnterEver(m_actor)
n
p block->shapeCanEnterCurrently(m_actor->m_shape)
s
n
p shape
p shape
p shape->positions
p block->m_totalDynamicVolume 
whe
p m_totalDynamicVolume 
s
n
n
p block->toS()
p block->m_totalDynamicVolume 
p block->m_totalDynamicVolume + v
p block->m_totalDynamicVolume + v > MAX_BLOCK_VOLUME
p block->m_totalDynamicVolume + v > 100
r
p actor.m_location->toS()
p block1.toS){
p block1.toS()
r
whe
r
r
c
p actor->m_location->toS()
r
p area.m_routeRequestQueue 
p block1.toS()
b testRoute.h:127
r
d
b testRoute.h:123
r
p area.m_routeRequestQueue 
b testRoute.h:114
r
p area.m_routeRequestQueue 
r
p block3->toS()
p block3.toS()
p actor->m_location->toS()
r
p fg1
p fg1->m_merged
p fg3->m_merged
r
p fg1->m_merged 
r
whe
r
whe
up 11
p b
p x
p y
p maxZ
p m_buckets
p m_buckets[0][20]
p maxY
p maxX
p maxZ
p m_buckets[0][20].resize(2)
p m_buckets[0][0].resize(2)
r
up 11
p w
p m_buckets[x]
p m_buckets[x].size()
p m_buckets[x][y].size()
b locationBuckets.cpp:7
r
p maxX
n
n
n
p m_buckets
n
p m_buckets[0]
n
p x
p y
n
p y
n
p y
n
n
p y
r
c
whe
up 11
p x
p y
p maxZ
r
up 11
p x
p y
p maxZ
p maxY
r
r
whe
up 1
p x
p y
p z
p endX
p endy
p endY
p endZ
p from->m_x
p from->m_x + range
range
p range
p m_area->sizeX
p m_area->m_sizeX
p m_area->m_sizeX
b visionRequest.cpp:14
r
b visionRequest.cpp:14
r
b locationBuckets.cpp:
b locationBuckets.cpp:88
c
r
b locationBuckets.cpp:87
r
p actor
p x 
p y
p z
p m_buckets 
b visionRequest.cpp:14
r
b locationBuckets.cpp:88
r
b locationBuckets.cpp:87
r
p m_buckets
p a2.m_location->toS()
p a2
p visionRequest.m_actor
p visionRequest.m_actor.m_location
p visionRequest.m_actor.m_location->toS()
b block.cpp:303
r
p actor->m_location
p actor->m_location->toS()
r
whe
r
whe
block
r
p locationBuckets.cpp:89
b locationBuckets.cpp:89
r
p actor
p actor->m_location->toS()
c
p actor->m_location->toS()
p actor->m_blocks
p actor->m_location
p actor->m_location->toS()
p actor->m_shape->positions
r
whe
whe
r
whe
p x
up 1
p x
p y
p z
