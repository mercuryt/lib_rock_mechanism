n
c
up 7
p pair.second
p pair.second->m_fluidType->name
p pair.second->totalVolume()
r
c
d
c
r
whe
up 7
up
p fluidGroup
p &fluidGroup
p fluidGroup->m_fluidType->name
b area.cpp:83 if s_step == 7
r
p fgMercury->totalVolume
up
p fgMercury->totalVolume
p fgMercury->totalVolume()
r
up
down
p fgMercury->totalVolume()
p toS()
down
up
r
p fluidGroup->m_fluidType->name
c
p fluidGroup->m_fluidType->name
c
p fluidGroup->m_fluidType->name
c
r
c
p fluidGroup->totalVolume()
p fluidGroup->m_futureGroups.size()
p fluidGroup->m_disolvedInThisGroup.size()
r
whe
up 7
p m_fluidType->name
r
whe
b fluidGroup.cpp:670
r
p s_step
c
p s_step
c
p s_step
whe
r
p fluidGroup.m_drainQueue.m_set
p m_drainQueue.m_set
p m_fluidType->name
p m_fluidType
r
r
whe
b fluidGroup.cpp:672
r
y
p m_merged
c
p m_merged
p validate()
p m_fluidType->name
up
r
whe
r
whe
r
whe
r
p actor.m_location.toS()
p actor.m_location->toS()
p actor.m_location->m_x
p actor.m_location->m_y
p actor.m_location->m_z
p actor.m_location
up
down
p area.m_blocks[3][3][1]
p &area.m_blocks[3][3][1]
p actor.m_location
p actor.m_location->toS()
p actor.m_location->m_solid
r
up 7
down
p &block1
p block1->toS()
p block1.toS()
block1.toS()
p block1.toS()
p actor->m_location.toS()
p actor->m_location->toS()
b testRoute.h:158
r
n
r
s
n
r
s
n
s
n
p block->toS()
e block->toS()
echo block->toS()
echo
p block->canEnterEver(m_actor)
n
p block->canEnterCurrently(m_actor)
whe
p toS()
p block->toS()
p m_actor
p m_actor->m_location
p m_actor->m_location->toS()
whe
s
r
p actor.m_location
p actor.m_location->toS()
b baseBlock::enter
r
r
c
r
p toS()
whe
c
b hasScheduledEvents.cpp:11
r
c
b hasScheduledEvents.cpp:8
r
p toS()
c
p toS()
p block->toS()
s
n
n
p block->m_totalDynamicVolume
p block->m_actors
p block->m_actors.size*(
p block->m_actors.size()
r
p a
p a->name
p b->name
up
p fluidType->name
up
p volume
p fluidType
p s_swib
p s_swim
p s_swimmingInWater 
p s_swimmingInWater ->swim
p s_swimmingInWater->swim.size()
p s_swimmingInWater->swim.contains
p s_swimmingInWater->swim.contains(s_water)
whe
up
down
down
up
r
p routeRequest.m_result.size()
p routeRequest.m_result
p routeRequest.m_result[0]
p routeRequest.m_result.at(0)
p routeRequest.m_result
r
r
p routeRequest.m_result
p routeRequest.m_result[0]
p routeRequest.m_result[0]->toS()
p routeRequest.m_result[1]->toS()
p routeRequest.m_result[2]->toS()
p routeRequest.m_result[3]->toS()
p routeRequest.m_result[4]->toS()
p s_swimmingInWater 
p s_swimmingInWater.climb
p s_swimmingInWater.jumpDown
r
b testShared.h:190
r
n
n
n
p block->toS()
b testShared.h:192
r
c
p block->toS()
p toS()
n
p volume
p fluidType
p fluidType->name
p block->volumeOfFluidTypeContains(fluidType)
p block->volumeOfFluidTypeContains(fluidType) >= volume
b testShared.h:210
r
c
p toS()
p block->toS()
c
p block->toS()
c
r
p actor.m_location->toS()
p block3.toS()
r
p block->toS()
up 7
p block->toS()
p block->anyoneCanEnterEver()
p m_moveType->name
p block->moveTypeCanEnter(s_twoLegs)
r
p block->moveTypeCanEnter(s_twoLegs)
up 7
p block->moveTypeCanEnter(s_twoLegs)
r
up 7
p block->toS)
p block->toS()
p block->canStandIn()
r
up 7
p block->canStandIn()
p block->toS()
p block->adacents[5] == nullptr
p block->adacents[5] == 0
p block->adjacents[5] == 0
p block->m_adjacents[5]
p block->m_adjacents[5] == 0
p block->m_adjacents[5] == nullptr
p block->m_adjacents[5].isSolid()
p block->m_adjacents[5]->isSolid()
r
up 7
p block->toS()
p block->anyoneCanEnterEver ()
