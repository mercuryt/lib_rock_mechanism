#pragma once

#include "../lib/json.hpp"
#include "types.h"
#include <cmath>
#include <cstdint>
#include <fstream>
using Json = nlohmann::json;
namespace Config
{
	inline Step addToStockPileDelaySteps = 10;
	inline uint32_t maxBlockVolume = 100;
	inline uint32_t maxBlockVolumeHardLimit = 150;
	inline uint32_t maxNumberOfWorkersForDigProject = 3;
	inline uint32_t maxNumberOfWorkersForConstructionProject = 4;
	inline float unarmedCombatSkillModifier = 1.2;
	inline float itemSkillModifier = 1.2;
	inline float itemQualityModifier = 1.2;
	inline float itemWearModifier = 1;
	inline float itemTypeCombatScoreModifier = 1;
	inline float flankingModifier = 1;
	inline float adjacentAllyCombatScoreBonusModifier = 1;
	inline Step yokeDelaySteps = 10;
	inline Step loadDelaySteps = 10;
	inline float ratioOfTotalBodyVolumeWhichIsBlood = 0.05;
	inline float bodyHardnessModifier = 1;
	inline float pierceBoneModifier = 1;
	inline float pierceMuscelModifier = 1;
	inline float pierceFatModifier = 1;
	inline float pierceSkinModifier = 1;
	inline float ratioWoundsCloseDelayToBleedVolume = 10000;
	inline uint32_t bleedEventBaseFrequency = 10000;
	inline Step bleedPassOutDuration = 1000;
	inline float bleedToUnconciousessRatio = 0.1;
	inline float bleedToDeathRatio = 0.4;
	inline float musclePierceForceCost = 1;
	inline float fatPierceForceCost = 1;
	inline float skinPierceForceCost = 1;
	inline Step stepsTillDiePlantPriorityOveride = 1000;
	inline float maxDistanceVisionModifier = 1.1;
	inline uint32_t percentOfPlantMassWhichIsFoliage = 30;
	inline uint32_t minimumPercentFoliageForGrow = 90;
	inline uint32_t installItemDelay = 10;
	inline uint32_t objectivePrioiorityKill = 1000;
	inline float pathHuristicConstant = 1;
	inline uint32_t impassibleItemVolume = 60;
	inline float massCarryMinimumMovementRatio = 0.5;
	inline float rollingMassModifier = 0.3;
	inline uint32_t actorDoVisionInterval = 10;
	inline uint32_t moveTryAttemptsBeforeDetour = 2;
	inline Step sowSeedsStepsDuration = 20;
	inline uint32_t sowSeedsPriority = 10;
	inline uint32_t fluidsSeepDiagonalModifier = 100;
	inline float stepsAttackCoolDownReductionPerPointOfDextarity = 0.1;
	inline float unitsOfMoveSpeedPerUnitOfAgility = 0.1;
	inline float unitsOfCarryMassPerUnitOfStrength = 10;
	inline uint32_t objectivePrioritySleep = 20;
	inline uint32_t digScoreCost = 100;
	inline float digStrengthModifier = 1;
	inline float digSkillModifier = 1;
	inline uint32_t digObjectivePriority = 10;
	inline uint32_t statsGrowthUpdateFrequency = 1000;
	inline float heatFractionForSmoulder = 0.1;
	inline float heatFractionForBurn = 0.4;
	inline float fireRampDownPhaseDurationFraction = 0.2;
	inline Step stepsToDrink = 40;
	inline Step stepsToEat = 100;
	inline uint32_t drinkPriority = 200;
	inline uint32_t eatPriority = 100;
	inline uint32_t maxDistanceToLookForEatingLocation = 100;
	inline Step harvestEventDuration = 50;
	inline uint32_t harvestPriority = 150;
	inline uint32_t unitsBodyMassPerUnitFoodConsumed = 100;
	inline uint32_t maxBlocksToLookForBetterFood = 20;
	inline uint32_t percentHungerAcceptableDesireModifier = 20;
	inline uint32_t constructScoreCost = 100;
	inline float constructStrengthModifier = 0.1;
	inline float constructSkillModifier = 0.1;
	inline uint32_t constructObjectivePriority = 10;
	inline uint32_t craftObjectivePriority = 10;
	inline uint32_t locationBucketSize = 20;
	inline float forceAbsorbedPiercedModifier = 1;
	inline float forceAbsorbedUnpiercedModifier = 1;
	inline float pierceModifier = 1;
	inline bool fluidPiston = false;
	inline uint32_t visionThreadingBatchSize = 30;
	inline Step givePlantsFluidDelaySteps = 5;
	inline uint32_t maxSkillLevel = 100;
	inline uint32_t killPriority = 1000;
	inline float unitsOfAttackForcePerUnitOfStrength = 1;
	inline Step attackCoolDownDurationBase = 20;
	inline float itemTypeCombatModifier = 1;
	inline float itemSkillCombatModifier = 1;
	inline float itemQualityCombatModifier = 1;
	inline float itemWearCombatModifier = 1;
	inline uint32_t givePlantsFluidPriority = 100;
	inline uint32_t hoursPerDay = 24;
	inline uint32_t minutesPerHour = 60;
	inline uint32_t secondsPerMinute = 60;
	inline Step stepsPerSecond = 20;
	inline Step stepsPerMinute = stepsPerSecond * secondsPerMinute;
	inline Step stepsPerHour = stepsPerMinute * minutesPerHour;
	inline Step stepsPerDay = stepsPerHour * hoursPerDay;
	inline uint32_t sleepObjectivePriority = 50;
	inline uint32_t minimumHaulSpeed = 3;
	inline Step stepsFrequencyToLookForHaulSubprojects = 20;
	inline Step stepsToWaitWhenCannotExitArea = 200;
	inline uint32_t maxZLevelForDeepAmbiantTemperature = 100;
	inline uint32_t deepAmbiantTemperature = 295;
	inline uint32_t undergroundAmbiantTemperature = 284;
	inline uint32_t stockPilePriority = 100;
	inline uint32_t getToSafeTemperaturePriority = 10000;
	inline uint32_t unitsOfWoundAreaPerUnitItemScaleFactor = 100;
	inline uint32_t scaleOfHumanBody = 100;
	inline Step pierceStepsTillHealedModifier = 200;
	inline Step cutStepsTillHealedModifier = 400;
	inline Step bludgeonStepsTillHealedModifier = 400;
	inline Step baseHealDelaySteps = 10000;
	inline uint32_t pierceBleedVoumeRateModifier = 10;
	inline uint32_t cutBleedVoumeRateModifier = 20;
	inline uint32_t bludgeonBleedVoumeRateModifier = 1;
	inline uint32_t piercePercentTemporaryImparmentModifier = 10;
	inline uint32_t cutPercentTemporaryImparmentModifier = 20;
	inline uint32_t bludgeonPercentTemporaryImparmentModifier = 1;
	inline uint32_t piercePercentPermanantImparmentModifier = 10;
	inline uint32_t cutPercentPermanantImparmentModifier = 20;
	inline uint32_t bludgeonPercentPermanantImparmentModifier = 1;
	inline uint32_t percentPermanantImparmentMinimum = 10;
	inline float heatDisipatesAtDistanceExponent = 3.5;
	inline uint32_t heatRadianceMinimum = 3;
	inline uint16_t daysPerYear = 365;
	inline uint32_t rainFrequencyModifier = 1000;
	inline uint32_t restIntervalSteps = 5 * stepsPerSecond;
	inline uint32_t staminaPointsPerRestPeriod = 10;
	inline uint32_t maxStaminaPointsBase = 100;
	inline uint32_t unitsBodyMassPerUnitFluidConsumed = 100;
	inline uint32_t baseMoveCost = 50;
	inline uint32_t goUpMoveCost = 100;
	inline uint32_t wanderDistanceModifier = 8;
	inline Step stepsToDelayBeforeTryingAgainToCompleteAnObjective = 2000;
	inline uint32_t hitScaleModifier = 10;
	
	inline uint32_t convertBodyPartVolumeToArea(uint32_t volume){ return sqrt(volume); }
	inline void load()
	{
		std::ifstream f("data/config.json");
		Json data = Json::parse(f);
		addToStockPileDelaySteps = data["addToStockPileDelaySteps"].get<Step>();
		maxBlockVolume = data["maxBlockVolume"].get<uint32_t>();
		maxBlockVolumeHardLimit = data["maxBlockVolumeHardLimit"].get<uint32_t>();
		maxNumberOfWorkersForDigProject = data["maxNumberOfWorkersForDigProject"].get<uint32_t>();
		maxNumberOfWorkersForConstructionProject = data["maxNumberOfWorkersForConstructionProject"].get<uint32_t>();
		unarmedCombatSkillModifier = data["unarmedCombatSkillModifier"].get<float>();
		itemSkillModifier = data["itemSkillModifier"].get<float>();
		itemQualityModifier = data["itemQualityModifier"].get<float>();
		itemWearModifier = data["itemWearModifier"].get<float>();
		itemTypeCombatScoreModifier = data["itemTypeCombatScoreModifier"].get<float>();
		flankingModifier = data["flankingModifier"].get<float>();
		adjacentAllyCombatScoreBonusModifier = data["adjacentAllyCombatScoreBonusModifier"].get<float>();
		yokeDelaySteps = data["yokeDelaySteps"].get<Step>();
		loadDelaySteps = data["loadDelaySteps"].get<Step>();
		ratioOfTotalBodyVolumeWhichIsBlood = data["ratioOfTotalBodyVolumeWhichIsBlood"].get<float>();
		bodyHardnessModifier = data["bodyHardnessModifier"].get<float>();
		pierceBoneModifier = data["pierceBoneModifier"].get<float>();
		pierceMuscelModifier = data["pierceMuscelModifier"].get<float>();
		pierceFatModifier = data["pierceFatModifier"].get<float>();
		pierceSkinModifier = data["pierceSkinModifier"].get<float>();
		ratioWoundsCloseDelayToBleedVolume = data["ratioWoundsCloseDelayToBleedVolume"].get<float>();
		bleedEventBaseFrequency = data["bleedEventBaseFrequency"].get<uint32_t>();
		bleedPassOutDuration = data["bleedPassOutDuration"].get<Step>();
		bleedToUnconciousessRatio = data["bleedToUnconciousessRatio"].get<float>();
		bleedToDeathRatio = data["bleedToDeathRatio"].get<float>();
		musclePierceForceCost = data["musclePierceForceCost"].get<float>();
		fatPierceForceCost = data["fatPierceForceCost"].get<float>();
		skinPierceForceCost = data["skinPierceForceCost"].get<float>();
		stepsTillDiePlantPriorityOveride = data["stepsTillDiePlantPriorityOveride"].get<Step>();
		maxDistanceVisionModifier = data["maxDistanceVisionModifier"].get<float>();
		percentOfPlantMassWhichIsFoliage = data["percentOfPlantMassWhichIsFoliage"].get<uint32_t>();
		minimumPercentFoliageForGrow = data["minimumPercentFoliageForGrow"].get<uint32_t>();
		installItemDelay = data["installItemDelay"].get<uint32_t>();
		objectivePrioiorityKill = data["objectivePrioiorityKill"].get<uint32_t>();
		pathHuristicConstant = data["pathHuristicConstant"].get<float>();
		impassibleItemVolume = data["impassibleItemVolume"].get<uint32_t>();
		massCarryMinimumMovementRatio = data["massCarryMinimumMovementRatio"].get<float>();
		rollingMassModifier = data["rollingMassModifier"].get<float>();
		actorDoVisionInterval = data["actorDoVisionInterval"].get<uint32_t>();
		moveTryAttemptsBeforeDetour = data["moveTryAttemptsBeforeDetour"].get<uint32_t>();
		sowSeedsStepsDuration = data["sowSeedsStepsDuration"].get<Step>();
		sowSeedsPriority = data["sowSeedsPriority"].get<uint32_t>();
		fluidsSeepDiagonalModifier = data["fluidsSeepDiagonalModifier"].get<uint32_t>();
		stepsAttackCoolDownReductionPerPointOfDextarity = data["stepsAttackCoolDownReductionPerPointOfDextarity"].get<float>();
		unitsOfMoveSpeedPerUnitOfAgility = data["unitsOfMoveSpeedPerUnitOfAgility"].get<float>();
		unitsOfCarryMassPerUnitOfStrength = data["unitsOfCarryMassPerUnitOfStrength"].get<float>();
		objectivePrioritySleep = data["objectivePrioritySleep"].get<uint32_t>();
		digScoreCost = data["digScoreCost"].get<uint32_t>();
		digStrengthModifier = data["digStrengthModifier"].get<float>();
		digSkillModifier = data["digSkillModifier"].get<float>();
		digObjectivePriority = data["digObjectivePriority"].get<uint32_t>();
		statsGrowthUpdateFrequency = data["statsGrowthUpdateFrequency"].get<uint32_t>();
		heatFractionForSmoulder = data["heatFractionForSmoulder"].get<float>();
		heatFractionForBurn = data["heatFractionForBurn"].get<float>();
		fireRampDownPhaseDurationFraction = data["fireRampDownPhaseDurationFraction"].get<float>();
		stepsToDrink = data["stepsToDrink"].get<Step>();
		stepsToEat = data["stepsToEat"].get<Step>();
		drinkPriority = data["drinkPriority"].get<uint32_t>();
		eatPriority = data["eatPriority"].get<uint32_t>();
		maxDistanceToLookForEatingLocation = data["maxDistanceToLookForEatingLocation"].get<uint32_t>();
		harvestEventDuration = data["harvestEventDuration"].get<Step>();
		harvestPriority = data["harvestPriority"].get<uint32_t>();
		unitsBodyMassPerUnitFoodConsumed = data["unitsBodyMassPerUnitFoodConsumed"].get<uint32_t>();
		maxBlocksToLookForBetterFood = data["maxBlocksToLookForBetterFood"].get<uint32_t>();
		percentHungerAcceptableDesireModifier = data["percentHungerAcceptableDesireModifier"].get<uint32_t>();
		constructScoreCost = data["constructScoreCost"].get<uint32_t>();
		constructStrengthModifier = data["constructStrengthModifier"].get<float>();
		constructSkillModifier = data["constructSkillModifier"].get<float>();
		constructObjectivePriority = data["constructObjectivePriority"].get<uint32_t>();
		craftObjectivePriority = data["craftObjectivePriority"].get<uint32_t>();
		locationBucketSize = data["locationBucketSize"].get<uint32_t>();
		forceAbsorbedPiercedModifier = data["forceAbsorbedPiercedModifier"].get<float>();
		forceAbsorbedUnpiercedModifier = data["forceAbsorbedUnpiercedModifier"].get<float>();
		pierceModifier = data["pierceModifier"].get<float>();
		fluidPiston = data["fluidPiston"].get<bool>();
		visionThreadingBatchSize = data["visionThreadingBatchSize"].get<uint32_t>();
		givePlantsFluidDelaySteps = data["givePlantsFluidDelaySteps"].get<Step>();
		maxSkillLevel = data["maxSkillLevel"].get<uint32_t>();
		killPriority = data["killPriority"].get<uint32_t>();
		unitsOfAttackForcePerUnitOfStrength = data["unitsOfAttackForcePerUnitOfStrength"].get<float>();
		attackCoolDownDurationBase = data["attackCoolDownDurationBase"].get<Step>();
		itemTypeCombatModifier = data["itemTypeCombatModifier"].get<float>();
		itemSkillCombatModifier = data["itemSkillCombatModifier"].get<float>();
		itemQualityCombatModifier = data["itemQualityCombatModifier"].get<float>();
		itemWearCombatModifier = data["itemWearCombatModifier"].get<float>();
		givePlantsFluidPriority = data["givePlantsFluidPriority"].get<uint32_t>();
		hoursPerDay = data["hoursPerDay"].get<uint32_t>();
		minutesPerHour = data["minutesPerHour"].get<uint32_t>();
		secondsPerMinute = data["secondsPerMinute"].get<uint32_t>();
		stepsPerSecond = data["stepsPerSecond"].get<Step>();
		stepsPerMinute = data["stepsPerMinute"].get<Step>();
		stepsPerHour = data["stepsPerHour"].get<Step>();
		stepsPerDay = data["stepsPerDay"].get<Step>();
		sleepObjectivePriority = data["sleepObjectivePriority"].get<uint32_t>();
		minimumHaulSpeed = data["minimumHaulSpeed"].get<uint32_t>();
		stepsFrequencyToLookForHaulSubprojects = data["stepsFrequencyToLookForHaulSubprojects"].get<Step>();
		stepsToWaitWhenCannotExitArea = data["stepsToWaitWhenCannotExitArea"].get<Step>();
		maxZLevelForDeepAmbiantTemperature = data["maxZLevelForDeepAmbiantTemperature"].get<uint32_t>();
		deepAmbiantTemperature = data["deepAmbiantTemperature"].get<uint32_t>();
		undergroundAmbiantTemperature = data["undergroundAmbiantTemperature"].get<uint32_t>();
		stockPilePriority = data["stockPilePriority"].get<uint32_t>();
		getToSafeTemperaturePriority = data["getToSafeTemperaturePriority"].get<uint32_t>();
		unitsOfWoundAreaPerUnitItemScaleFactor = data["unitsOfWoundAreaPerUnitItemScaleFactor"].get<uint32_t>();
		scaleOfHumanBody = data["scaleOfHumanBody"].get<uint32_t>();
		pierceStepsTillHealedModifier = data["pierceStepsTillHealedModifier"].get<Step>();
		cutStepsTillHealedModifier = data["cutStepsTillHealedModifier"].get<Step>();
		bludgeonStepsTillHealedModifier = data["bludgeonStepsTillHealedModifier"].get<Step>();
		baseHealDelaySteps = data["baseHealDelaySteps"].get<Step>();
		pierceBleedVoumeRateModifier = data["pierceBleedVoumeRateModifier"].get<uint32_t>();
		cutBleedVoumeRateModifier = data["cutBleedVoumeRateModifier"].get<uint32_t>();
		bludgeonBleedVoumeRateModifier = data["bludgeonBleedVoumeRateModifier"].get<uint32_t>();
		piercePercentTemporaryImparmentModifier = data["piercePercentTemporaryImparmentModifier"].get<uint32_t>();
		cutPercentTemporaryImparmentModifier = data["cutPercentTemporaryImparmentModifier"].get<uint32_t>();
		bludgeonPercentTemporaryImparmentModifier = data["bludgeonPercentTemporaryImparmentModifier"].get<uint32_t>();
		piercePercentPermanantImparmentModifier = data["piercePercentPermanantImparmentModifier"].get<uint32_t>();
		cutPercentPermanantImparmentModifier = data["cutPercentPermanantImparmentModifier"].get<uint32_t>();
		bludgeonPercentPermanantImparmentModifier = data["bludgeonPercentPermanantImparmentModifier"].get<uint32_t>();
		percentPermanantImparmentMinimum = data["percentPermanantImparmentMinimum"].get<uint32_t>();
		heatDisipatesAtDistanceExponent = data["heatDisipatesAtDistanceExponent"].get<float>();
		heatRadianceMinimum = data["heatRadianceMinimum"].get<uint32_t>();
		daysPerYear = data["daysPerYear"].get<uint16_t>();
		rainFrequencyModifier = data["rainFrequencyModifier"].get<uint32_t>();
		restIntervalSteps = data["restIntervalSteps"].get<uint32_t>();
		staminaPointsPerRestPeriod = data["staminaPointsPerRestPeriod"].get<uint32_t>();
		maxStaminaPointsBase = data["maxStaminaPointsBase"].get<uint32_t>();
		unitsBodyMassPerUnitFluidConsumed = data["unitsBodyMassPerUnitFluidConsumed"].get<uint32_t>();
		baseMoveCost = data["baseMoveCost"].get<uint32_t>();
		goUpMoveCost = data["goUpMoveCost"].get<uint32_t>();
		wanderDistanceModifier = data["wanderDistanceModifier"].get<uint32_t>();
		stepsToDelayBeforeTryingAgainToCompleteAnObjective = data["stepsToDelayBeforeTryingAgainToCompleteAnObjective"].get<Step>();
		hitScaleModifier = data["hitScaleModifier"].get<uint32_t>();
	}
}
